# This is a basic workflow to help you get started with Actions

name: PushMarkdownFiles
run-name: Push [${{ github.ref_name }}] ${{ github.event.after }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    paths:
      - "public/**.html"
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install Lokalise CLI
        run: curl -sfL https://raw.githubusercontent.com/lokalise/lokalise-cli-2-go/master/install.sh | sh

      # Runs a set of commands using the runners shell
      - name: Push html to Lokalise
        env:
          VAR_LOKALISE_API_TOKEN: ${{ secrets.API_TOKEN }}
          VAR_LOKALISE_PROJECT_ID: ${{ vars.PROJECT_ID }}
          VAR_LOKALISE_PRODUCTION_TAG: ${{ vars.PRODUCTION_TAG }}
          ENV_LOKALISE_SOURCE_LANG_ISO: ${{ vars.SOURCE_LANG_ISO }}
          GITHUB_PREVIOUS_COMMIT: ${{ github.event.after }}
          GITHUB_CURRENT_COMMIT: ${{ github.event.before }}
        run:
             while read file 
             do 
                if [ -f $file ]
                then
                 ./bin/lokalise2 --token ${{ env.VAR_LOKALISE_API_TOKEN }} --project-id ${{ env.VAR_LOKALISE_PROJECT_ID }} file upload --file="${file}" --lang-iso ${{ env.ENV_LOKALISE_SOURCE_LANG_ISO }} --replace-modified --include-path  --tag-inserted-keys --tag-updated-keys --use-automations=true --poll-timeout 60s 
                fi
             done  < <(
             if [ -z ${{ env.GITHUB_CURRENT_COMMIT }} ]
             then
              git ls-files -- '**${{ env.ENV_LOKALISE_SOURCE_LANG_ISO }}.html'
             else
              git diff --name-only ${{ env.GITHUB_PREVIOUS_COMMIT }} ${{ env.GITHUB_CURRENT_COMMIT }} -- '**${{ env.ENV_LOKALISE_SOURCE_LANG_ISO }}.html'
             fi | awk NF)
